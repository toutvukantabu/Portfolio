/**
 * üß† GetExperiencesUseCase
 *
 * ‚ñ∂Ô∏è R√¥le :
 * Contient la logique m√©tier pour r√©cup√©rer et filtrer les experiences.
 *
 * ‚ñ∂Ô∏è Fonctionnement :
 * Appelle le repository pour r√©cup√©rer toutes les comp√©tences et applique des r√®gles m√©tier simples , ranger les experience par orde chronologique.
 */
import {ExperienceModel} from "@/domain/model/experience/ExperienceModel";
import {ExperienceRepository} from "@/domain/model/experience/ExperienceReository";

export class GetExperienceUseCase {
    constructor(private readonly repository: ExperienceRepository) {
    }

    async execute(locale: string): Promise<ExperienceModel[]> {
        const all = await this.repository.getAll(locale);
        return all.filter(skill => skill.title.trim() !== "");
    }
}
